version: '3.1'
#https://github.com/docker-library/postgres/issues/151
services:

  ldap:
    container_name: pacsldap
    image: dcm4che/slapd-dcm4chee:${PACS_LDAP_IMAGE_TAG}
    env_file: docker-compose.env
    volumes:
      - dcm4chee-ldap-ldap:/var/lib/ldap
      - dcm4chee-ldap-slapdd:/etc/ldap/slapd.d
    restart: on-failure

  pacsdb:
    container_name: pacsdb
    image: dcm4che/postgres-dcm4chee:${PACS_PSQL_IMAGE_TAG}
    logging:
      driver: json-file
      options:
        max-size: "10m"
    environment:
      - POSTGRES_DB=pacsdb
      - POSTGRES_USER=pacs
      - POSTGRES_PASSWORD_FILE=/run/secrets/kheops_pacsdb_pass
    secrets:
      - kheops_pacsdb_pass
    ports:
      - "5432:5432"
    restart: on-failure

  auth-db:
    container_name: authdb
    image: postgres:${KHEOPS_AUTHORIZATION_PSQL_DATABASE_IMAGE_TAG}
    volumes:
      - kheops-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=kheops
      - POSTGRES_USER=kheopsuser
      - POSTGRES_PASSWORD_FILE=/run/secrets/kheops_authdb_pass
    secrets:
      - kheops_authdb_pass
    restart: on-failure
    
  arc:
    container_name: pacsarc
    image: dcm4che/dcm4chee-arc-psql:${KHEOPS_ARC_IMAGE_TAG}
    ports:
      - "8080:8080"
      - "8443:8443"
      - "9990:9990"
      - "8787:8787"
      - "11112:11112"
      - "2575:2575"
    env_file: docker-compose.env
    environment:
      WILDFLY_CHOWN: /storage /opt/wildfly/standalone
      WILDFLY_WAIT_FOR: ldap:389 pacsdb:5432
      JAVA_OPTS: -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n
      POSTGRES_DB: pacsdb
      POSTGRES_USER: pacs
      POSTGRES_PASSWORD_FILE: /run/secrets/kheops_pacsdb_pass
      POSTGRES_HOST: pacsdb
    secrets:
      - kheops_pacsdb_pass
    depends_on:
      - ldap
      - pacsdb
    volumes:
      - dcm4chee-arc-wildfly:/opt/wildfly/standalone
      - Dcm4chee-arc-storage:/storage
    restart: on-failure

  kheops-authorization:
    container_name: kheopsauthorization
    image: osirixfoundation/kheops-authorization:${KHEOPS_AUTHORIZATION_IMAGE_TAG}
    restart: on-failure
    env_file: docker-compose.env
    ports:
      - "7575:8080"
    depends_on:
      - auth-db
      - arc
    secrets:
      - kheops_superuser_hmasecret
      - kheops_auth_hmasecret
      - kheops_authdb_pass
      - kheops_keycloak_clientsecret
      - kheops_client_dicomwebproxysecret
      - kheops_client_zippersecret
      - kheops_metric_ressource_password

  kheops-zipper:
    container_name: kheopszipper
    image: osirixfoundation/kheops-zipper:${KHEOPS_ZIPPER_IMAGE_TAG}
    restart: on-failure
    env_file: docker-compose.env
    depends_on:
      - arc
    secrets:
      - kheops_client_zippersecret

  kheops-ui:
    container_name: kheopsui
    image: osirixfoundation/kheops-ui:${KHEOPS_UI_IMAGE_TAG}
    env_file: docker-compose.env
    restart: on-failure
    depends_on:
      - kheops-authorization
      - arc

  kheops-dicomweb-proxy:
    container_name: kheopsdicomwebproxy
    image: osirixfoundation/kheops-dicomweb-proxy:${KHEOPS_DICOMWEB_PROXY_IMAGE_TAG}
    restart: on-failure
    env_file: docker-compose.env
    ports:
      - "8049:8080"
    depends_on:
      - kheops-authorization
      - arc
    secrets:
      - kheops_auth_hmasecret_post
      - kheops_client_dicomwebproxysecret

  kheops-ohif-standalone:
    container_name: kheopsohifstandalone
    image: osirixfoundation/kheops-ohif-standalone:latest
    ports:
      - "3000:3000"

  kheops-reverse-proxy:
    image: osirixfoundation/kheops-reverse-proxy:${KHEOPS_REVERSE_PROXY_IMAGE_TAG}
    container_name: kheopsreverseproxy
    env_file: docker-compose.env
    ports:
      - "80:80"
      - "443:443"
      - "8042:8042"
      - "8048:8048"
    depends_on:
      - kheops-authorization
      - kheops-dicomweb-proxy
      - arc
      - pacs-authorization-proxy
    extra_hosts:
      - "${ROOT_URL}:127.0.0.1"

  pacs-authorization-proxy:
    container_name: pacsauthorizationproxy
    env_file: docker-compose.env
    image: osirixfoundation/pacs-authorization-proxy:${PACS_AUTHORIZATION_PROXY_IMAGE_TAG}
    ports:
      - "82:80"
    depends_on:
      - arc
    secrets:
      - kheops_auth_hmasecret
      - kheops_auth_hmasecret_post

secrets:
  kheops_pacsdb_pass:
    file: ${SECRETS_PATH}/kheops_pacsdb_pass
  kheops_authdb_pass:
    file: ${SECRETS_PATH}/kheops_authdb_pass
  kheops_superuser_hmasecret:
    file: ${SECRETS_PATH}/kheops_superuser_hmasecret
  kheops_auth_hmasecret:
    file: ${SECRETS_PATH}/kheops_auth_hmasecret
  kheops_auth_hmasecret_post:
    file: ${SECRETS_PATH}/kheops_auth_hmasecret_post
  kheops_keycloak_clientsecret:
    file: ${SECRETS_PATH}/kheops_keycloak_clientsecret
  kheops_client_dicomwebproxysecret:
    file: ${SECRETS_PATH}/kheops_client_dicomwebproxysecret
  kheops_client_zippersecret:
    file: ${SECRETS_PATH}/kheops_client_zippersecret
  kheops_metric_ressource_password:
    file: ${SECRETS_PATH}/kheops_metric_ressource_password

volumes:
  dcm4chee-ldap-ldap:
  dcm4chee-ldap-slapdd:
  dcm4chee-arc-wildfly:
  Dcm4chee-arc-storage:
  kheops-db-data:
